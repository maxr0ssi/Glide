[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "glide"
version = "0.1.0"
description = "Advanced fingertip gesture control with TouchProof detection"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.git
  | \.mypy_cache
  | \.ruff_cache
  | \.venv
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",   # line too long (handled by black)
    "T201",   # print found
    "T203",   # pprint found
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
    "venv",
    "*.pyi",
]

[tool.ruff.per-file-ignores]
# Allow print statements in main and setup files
"glide/app/main.py" = ["T20"]
"setup_models.py" = ["T20"]

[tool.ruff.isort]
combine-as-imports = true
force-sort-within-sections = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "mediapipe.*",
    "websockets.*",
    "AppKit.*",
    "Quartz.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
